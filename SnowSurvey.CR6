'SnowSurvey CR6
'Created with Jinja2 from bear_valley_cr_basic

'Declare Variables and Units
Public BattV: Units BattV=Volts
Public PTemp_C : Units PTemp_C=Deg C
Public WS_mph : Units WS_mph=miles/hour
Public WindDir : Units WindDir=degrees
Public AirTF : Units AirTF=Deg F
Public RH : Units RH=%
Public Temp_F : Units Temp_F=Deg F


Dim AirTC
Dim SPkPa
Dim Twg
Dim Twpg
Dim Vpg
Dim Vp
Dim SVp
Dim Twch
Dim VpgVpd
Dim Top
Dim Bottom
Dim N

Public TdF : Units TdF=Deg F
Public TwF : Units TwF=Deg F
Public WC_F : Units WC_F=Deg F

'SR50AT Variable Code - Sensor # 1
'Single measured values.
Public SR50AT_1_M(3)
Alias SR50AT_1_M(1) = DT_1_M : Units DT_1_M = inches 'Distance from the SR50AT.
Alias SR50AT_1_M(2) = Q_1_M : Units Q_1_M = unitless 'Quality number.
Alias SR50AT_1_M(3) = Air_1_M : Units Air_1_M = 째C 'Air temperature.
'Array to hold 11 SR50AT measurements composed of a distance and
'quality number, and air temperature.
Public SR50AT_1(11,3)

'Sorted array of 11 SR50AT measurements composed of a distance and
'quality number, and temperature. Measurements are sorted by the 
'distance value from smallest
Public Result_SR50AT_1(11,3)

Public SR50AT_1_TCDT : Units SR50AT_1_TCDT = inches 'Temperature corrected distance
Public SR50AT_1_Q : Units SR50AT_1_Q = unitless 'Quality number
Public SR50AT_1_AirTempC : Units SR50AT_1_AirTempC = 째C 'Air temperature

Public SR50AT_1_Initial_Depth : Units SR50AT_1_Initial_Depth = inches 'Distance to ground.
Public SR50AT_1_Snow_Depth : Units SR50AT_1_Snow_Depth = inches 'Snow depth.

'Controls SR50AT measurement. This flag can be manually controlled to
'run tests in the field or is automatically set 2 minutes before the
'hourly data storage interval. This is done so 11 measurements can
'be made and sorted before the values are stored.
Public SR50ATCtrl_1 As Boolean
'Set this flag to measure and store the initial distance from the
'SR50AT to the ground.
Public SR50AT_MID_1 As Boolean

Public SR50AT_Counter_1 'used as a counter

'SR50AT Variable Code - Sensor # 2
'Single measured values.
Public SR50AT_2_M(3)
Alias SR50AT_2_M(1) = DT_2_M : Units DT_2_M = inches 'Distance from the SR50AT.
Alias SR50AT_2_M(2) = Q_2_M : Units Q_2_M = unitless 'Quality number.
Alias SR50AT_2_M(3) = Air_2_M : Units Air_2_M = 째C 'Air temperature.
'Array to hold 11 SR50AT measurements composed of a distance and
'quality number, and air temperature.
Public SR50AT_2(11,3)

'Sorted array of 11 SR50AT measurements composed of a distance and
'quality number, and temperature. Measurements are sorted by the 
'distance value from smallest
Public Result_SR50AT_2(11,3)

Public SR50AT_2_TCDT : Units SR50AT_2_TCDT = inches 'Temperature corrected distance
Public SR50AT_2_Q : Units SR50AT_2_Q = unitless 'Quality number
Public SR50AT_2_AirTempC : Units SR50AT_2_AirTempC = 째C 'Air temperature

Public SR50AT_2_Initial_Depth : Units SR50AT_2_Initial_Depth = inches 'Distance to ground.
Public SR50AT_2_Snow_Depth : Units SR50AT_2_Snow_Depth = inches 'Snow depth.

'Controls SR50AT measurement. This flag can be manually controlled to
'run tests in the field or is automatically set 2 minutes before the
'hourly data storage interval. This is done so 11 measurements can
'be made and sorted before the values are stored.
Public SR50ATCtrl_2 As Boolean
'Set this flag to measure and store the initial distance from the
'SR50AT to the ground.
Public SR50AT_MID_2 As Boolean

Public SR50AT_Counter_2 'used as a counter
Public Rain_in : Units Rain_in=inch


'Define Data Tables
DataTable(Table1,True,-1)
	DataInterval(0,60,Min,10)
	Sample(1,AirTF,FP2)
	Sample(1,RH,FP2)

	Totalize(1,Rain_in,FP2,False)
	FieldNames("Precip")

	Sample(1,SR50AT_1_Snow_Depth,FP2)
	FieldNames("IntSnow")

	Sample(1,SR50AT_2_Snow_Depth,FP2)
	FieldNames("TtlSnow")

	Sample(1,BattV,FP2)
	FieldNames("Battery")
	
	Sample(1,PTemp_C,FP2)
	FieldNames("CR6T_C")

	Sample(1,SR50AT_2_AirTempC,FP2)
	FieldNames("TtlAirTC")

	Sample(1,SR50AT_1_TCDT,FP2)
	FieldNames("IntDist")

	Sample(1,SR50AT_1_Q,FP2)
	FieldNames("IntQ")

	Sample(1,SR50AT_2_TCDT,FP2)
	FieldNames("TtlDist")

	Sample(1,SR50AT_2_Q,FP2)
	FieldNames("TtlQ")

	Average(1,WS_mph,FP2,False)
	Maximum(1,WS_mph,FP2,False,False)
	Sample(1,WindDir,FP2)
EndTable


DataTable(TG_15S_Wind,True,178560)
	DataInterval(0,15,Sec,10)
	Maximum(1,WS_mph,FP2,False,False)
	FieldNames("WS_3_sec_average_Max")
	WindVector(1,WS_mph,WindDir,FP2,False,0,0,1)
	FieldNames("WS_mph_S_WVT,WindDir_D1_WVT")
EndTable

DataTable(TG_5Min_Temp,True,8640)
	DataInterval(0,5,Min,10)

	Sample(1,AirTF,FP2)
	Sample(1,WC_F,FP2)
	Sample(1,TdF,FP2)
	Sample(1,TwF,FP2)
	Sample(1,RH,FP2)
	Sample(1,BattV,FP2)
EndTable

DataTable(TG_15M_Precip,True,2880)
	DataInterval(0,15,Min,10)

	Totalize(1,Rain_in,FP2,False)
	FieldNames("Precip")
	Sample(1,SR50AT_1_Snow_Depth,FP2)
	FieldNames("IntSnow")
	Sample(1,SR50AT_2_Snow_Depth,FP2)
	FieldNames("TtlSnow")
EndTable

DataTable(MW_15M,True,2000)
	DataInterval(0,15,Min,10)
	Sample(1,AirTF,FP2)
	Sample(1,TdF,FP2)
	Sample(1,TwF,FP2)
	Sample(1,RH,FP2)

	Average(1,WS_mph,FP2,False)
	
	Maximum(1,WS_mph,FP2,False,False)
	FieldNames("WS_3_sec_average_Max")

	WindVector(1,WS_mph,WindDir,FP2,False,0,0,1)
	FieldNames("WS_mph_S_WVT,WindDir_D1_WVT")
	Sample(1,BattV,FP2)
EndTable

DataTable(Table10Min,True,-1)
	DataInterval(0,10,Min,10)
	Minimum(1,BattV,FP2,False,False)
	WindVector(1,WS_mph,WindDir,FP2,False,0,0,1)
	FieldNames("WS_mph_S_WVT,WindDir_D1_WVT")
	Maximum(1,WS_mph,FP2,False,False)
	FieldNames("WS_3_Sec_Gust_Max")
EndTable

DataTable(Table60Min,True,-1)
	DataInterval(0,60,Min,10)
	Sample(1,BattV,FP2)
	Sample(1,AirTF,FP2)
	Sample(1,RH,FP2)
	Sample(1,WC_F,FP2)
	Sample(1,TdF,FP2)
	Sample(1,TwF,FP2)
	WindVector(1,WS_mph,WindDir,FP2,False,0,0,1)
	FieldNames("WS_mph_S_WVT,WindDir_D1_WVT")
	Maximum(1,WS_mph,FP2,False,False)
	FieldNames("WS_3_Sec_Gust_Max")
EndTable

DataTable(StationDaily,True,-1)
	DataInterval(0,1440,Min,10)
	Minimum(1,BattV,FP2,False,False)

	Minimum(1,PTemp_C,FP2, False, False)
	Minimum(1,Temp_F,FP2, False, False)
	Average(1,PTemp_C,FP2, False)
	Average(1,Temp_F,FP2, False)
	
	Maximum(1,PTemp_C,FP2, False, False)
	Maximum(1,Temp_F,FP2, False, False)
EndTable

'Main Program
BeginProg
	SR50AT_Counter_1 = 1
	SR50AT_Counter_2 = 1
	SR50AT_1_Initial_Depth = 31
	SR50AT_2_Initial_Depth = 234
	SR50ATCtrl_1 = True
	SR50ATCtrl_2 = True
	'Main Scan
	Scan(3,Sec,1,0)

		'05103 Wind Speed & Direction Sensor measurements 'WS_mph' and 'WindDir'
		PulseCount(WS_mph,1,U10,5,1,0.2192,0)
		BrHalf(WindDir,1,mV5000,U8,U7,1,2500,True,20000,60,355,0)
		If WindDir>=355 Or WindDir<0 Then WindDir=0

		'Generic Tipping Bucket Rain Gauge measurement 'Rain_in'
		PulseCount(Rain_in,1,U3,1,0,0.01,0)

		'Call Data Tables and Store Data
		CallTable Table1
		CallTable TG_15S_Wind
		CallTable TG_5Min_Temp
		CallTable TG_15M_Precip

		CallTable MW_15M
		CallTable Table10Min
		CallTable Table60Min
		CallTable StationDaily
	NextScan

	
SlowSequence
	Scan(10,Sec,1,0)
		'SR50AT Sample Code - Sensor # 1
		'Automated snow depth measurement. Must occur two minutes before
		'actual storage time to get 11 measurements completed.
		If TimeIntoInterval (13,15,Min) Then
			SR50ATCtrl_1 = True
		EndIf
		'Set this flag to true to get the initial distance from the SR50AT
		'to the ground.
		If SR50AT_MID_1 Then SR50ATCtrl_1 = True
		'Logic to make 11 snow depth measurements, sort them, and store
		'the corrected values.
		If SR50ATCtrl_1 Then
		'SR50AT Sonic Ranging Sensor (SDI-12 Output) measurements
		'MDT, MQ, & MAir
			SDI12Recorder(SR50AT_1_M(),C1,"0","M7!",1,0,-1)
			'Load the array to be sorted.
			SR50AT_1(SR50AT_Counter_1,1) = SR50AT_1_M(1)
			SR50AT_1(SR50AT_Counter_1,2) = SR50AT_1_M(2)
			SR50AT_1(SR50AT_Counter_1,3) = SR50AT_1_M(3)
			SR50AT_Counter_1 += 1
			If SR50AT_Counter_1 > 11 Then
				SR50AT_Counter_1 = 1
				SR50ATCtrl_1 = False
				SortSpa (Result_SR50AT_1(1,1),11,SR50AT_1(1,1),2)
				SR50AT_1_TCDT = Result_SR50AT_1(6,1)
				SR50AT_1_Q = Result_SR50AT_1(6,2)
				SR50AT_1_AirTempC = Result_SR50AT_1(6,3)
				If SR50AT_MID_1 Then
					SR50AT_1_Initial_Depth = SR50AT_1_TCDT
					SR50AT_MID_1 = False
				EndIf
				SR50AT_1_Snow_Depth = SR50AT_1_Initial_Depth - SR50AT_1_TCDT
			EndIf
		EndIf

		'SR50AT Sample Code - Sensor # 2
		'Automated snow depth measurement. Must occur two minutes before
		'actual storage time to get 11 measurements completed.
		If TimeIntoInterval (13,15,Min) Then
			SR50ATCtrl_2 = True
		EndIf
		'Set this flag to true to get the initial distance from the SR50AT
		'to the ground.
		If SR50AT_MID_2 Then SR50ATCtrl_2 = True
		'Logic to make 11 snow depth measurements, sort them, and store
		'the corrected values.
		If SR50ATCtrl_2 Then
		'SR50AT Sonic Ranging Sensor (SDI-12 Output) measurements
		'MDT, MQ, & MAir
			SDI12Recorder(SR50AT_2_M(),C3,"0","M7!",1,0,-1)
			'Load the array to be sorted.
			SR50AT_2(SR50AT_Counter_2,1) = SR50AT_2_M(1)
			SR50AT_2(SR50AT_Counter_2,2) = SR50AT_2_M(2)
			SR50AT_2(SR50AT_Counter_2,3) = SR50AT_2_M(3)
			SR50AT_Counter_2 += 1
			If SR50AT_Counter_2 > 11 Then
				SR50AT_Counter_2 = 1
				SR50ATCtrl_2 = False
				SortSpa (Result_SR50AT_2(1,1),11,SR50AT_2(1,1),2)
				SR50AT_2_TCDT = Result_SR50AT_2(6,1)
				SR50AT_2_Q = Result_SR50AT_2(6,2)
				SR50AT_2_AirTempC = Result_SR50AT_2(6,3)
				If SR50AT_MID_2 Then
					SR50AT_2_Initial_Depth = SR50AT_2_TCDT
					SR50AT_MID_2 = False
				EndIf
				SR50AT_2_Snow_Depth = SR50AT_2_Initial_Depth - SR50AT_2_TCDT
			EndIf
		EndIf
	NextScan


SlowSequence
	'Non-Wind Scan
	Scan(60,Sec,1,0)
		'Default CR6 Datalogger Battery Voltage measurement 'BattV'
		Battery(BattV)
		'Default CR6 Datalogger Wiring Panel Temperature measurement 'PTemp_C'
		PanelTemp(PTemp_C,60)
		
		

		'HMP50/HMP60 Temperature & Relative Humidity Sensor measurements 'AirTF' and 'RH'
		VoltSE(AirTF,1,mV1000,U1,False,0,60,0.18,-40)
		VoltSE(RH,1,mV1000,U2,False,0,60,0.1,0)
		'Type T Thermocouple measurements 'Temp_F'
		TCDiff(Temp_F,1,mv200C,U5,TypeT,PTemp_C,True,0,60,1.8,32)
		If RH>100 AND RH<108 Then RH=100


		'Dew Point and Wet-Bulb calculation prep
		AirTC=(5/9)*(AirTF-32)
		SPkPa=74.11727
		SatVP(SVp,AirTC)
		Vp=RH*SVp/100
		'Dew Point calculation 'TdF'
		DewPoint(TdF,AirTC,RH)
		If TdF>AirTC Or TdF=NAN Then TdF=AirTC
		'Find Wet-Bulb 'TwF'
		Top=AirTC
		Bottom=TdF
		For N = 1 To 25
			Twpg=Twg
			Twg=((Top-Bottom)/2)+Bottom
			WetDryBulb(Vpg,AirTC,Twg,SPkPa)
			VpgVpd=Vpg-Vp
			Twch=ABS(Twpg-Twg)
			If VpgVpd>0 Then
				Top=Twg
			Else
				Bottom=Twg
			EndIf
			If Twch<0.01 Or N=25 Then ExitFor
		Next
		TwF=Twg
		TdF=1.8*TdF+32
		TwF=1.8*TwF+32


		'Wind Chill calculation 'WC_F'
		WC_F=35.74+0.6215*AirTF-35.75*WS_mph^0.16+0.4275*AirTF*WS_mph^0.16
		If WC_F>AirTF Or WC_F=NAN Then WC_F=AirTF
		If AirTF>50 OR WS_mph<3 Then WC_F=AirTF
	NextScan
EndProg
